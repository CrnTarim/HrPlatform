// <auto-generated />
using System;
using HrPLatform.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HrPLatform.DataAccessLayer.Migrations
{
    [DbContext(typeof(HrDBConnection))]
    [Migration("20230906134318_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HrPlatform.Entities.Company.CompanyInformation", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardHoldersName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebsite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("CompanyInformations", (string)null);
                });

            modelBuilder.Entity("HrPlatform.Entities.Employees.PersonalInformation", b =>
                {
                    b.Property<Guid>("SSN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SSN");

                    b.ToTable("PersonalInformations", (string)null);
                });

            modelBuilder.Entity("HrPlatform.Entities.Employees.TitleInformation", b =>
                {
                    b.Property<Guid>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SsnPersonal")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Team")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TitleId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("SsnPersonal")
                        .IsUnique();

                    b.ToTable("TitleInformations");
                });

            modelBuilder.Entity("HrPlatform.Entities.HrAutho", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PassWordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PassWordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("HrAutho", (string)null);
                });

            modelBuilder.Entity("HrPlatform.Entities.PersonalCompany", b =>
                {
                    b.Property<Guid>("SSN")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SSN", "CompanyId");

                    b.HasIndex("CompanyId");

                    b.ToTable("PersonalCompany", (string)null);
                });

            modelBuilder.Entity("HrPlatform.Entities.Employees.TitleInformation", b =>
                {
                    b.HasOne("HrPlatform.Entities.Company.CompanyInformation", "CompanyInformation")
                        .WithMany("TitleInformations")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrPlatform.Entities.Employees.PersonalInformation", "PersonalInformation")
                        .WithOne("TitleInformation")
                        .HasForeignKey("HrPlatform.Entities.Employees.TitleInformation", "SsnPersonal")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CompanyInformation");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("HrPlatform.Entities.HrAutho", b =>
                {
                    b.HasOne("HrPlatform.Entities.Company.CompanyInformation", "CompanyInformation")
                        .WithMany("HrAuthos")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyInformation");
                });

            modelBuilder.Entity("HrPlatform.Entities.PersonalCompany", b =>
                {
                    b.HasOne("HrPlatform.Entities.Company.CompanyInformation", "CompanyInformation")
                        .WithMany("PersonalInformations")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrPlatform.Entities.Employees.PersonalInformation", "PersonalInformation")
                        .WithMany("CompanyInformations")
                        .HasForeignKey("SSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyInformation");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("HrPlatform.Entities.Company.CompanyInformation", b =>
                {
                    b.Navigation("HrAuthos");

                    b.Navigation("PersonalInformations");

                    b.Navigation("TitleInformations");
                });

            modelBuilder.Entity("HrPlatform.Entities.Employees.PersonalInformation", b =>
                {
                    b.Navigation("CompanyInformations");

                    b.Navigation("TitleInformation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
